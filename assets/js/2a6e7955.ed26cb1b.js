"use strict";(self.webpackChunkmeteoscientific=self.webpackChunkmeteoscientific||[]).push([[4209],{296:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/ldds-dragino-layout-60c047ce0037baa2a341258526a4737e.png"},2746:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/ldds75-abfec251e30b8d49126c74d33f405b20.png"},3195:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/bus-pirate-ldds75-7fc0bbeafa8575948605c1d9fb904c80.png"},4319:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var i=t(4848),o=t(8453);const s={sidebar_position:8,title:"Configure A Device"},r="Configure a LoRaWAN Sensor",a={id:"tutorial-basics/configure-a-device",title:"Configure A Device",description:"Ok, you just got a new sensor in the mail.  It came with an DevEUI, AppEUI, AppKey and maybe some other fancy stuff.",source:"@site/docs/tutorial-basics/008-configure-a-device.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/configure-a-device",permalink:"/docs/tutorial-basics/configure-a-device",draft:!1,unlisted:!1,editUrl:"https://github.com/gristlekinginc/metsci-site-v2/tree/main/docs/tutorial-basics/008-configure-a-device.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8,title:"Configure A Device"},sidebar:"tutorialSidebar",previous:{title:"Metrics & Decoders",permalink:"/docs/tutorial-basics/metrics-on-chirpstack"},next:{title:"Structure Your Data",permalink:"/docs/tutorial-basics/good-housekeeping-for-LoRaWAN-sensor-fleets"}},c={},d=[{value:"Hardware",id:"hardware",level:3},{value:"Software",id:"software",level:3},{value:"2. Connect to the Bus Pirate",id:"2-connect-to-the-bus-pirate",level:3},{value:"3. Set Up UART on Bus Pirate",id:"3-set-up-uart-on-bus-pirate",level:3},{value:"3. Physical Connection from Bus Pirate to LDDS75",id:"3-physical-connection-from-bus-pirate-to-ldds75",level:3},{value:"4. Talk to the Device",id:"4-talk-to-the-device",level:3},{value:"5. Configure Your Device",id:"5-configure-your-device",level:3},{value:"Credits",id:"credits",level:3}];function l(e){const n={a:"a",code:"code",h1:"h1",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"configure-a-lorawan-sensor",children:"Configure a LoRaWAN Sensor"}),"\n",(0,i.jsxs)(n.p,{children:["Ok, you just got a new sensor in the mail.  It came with an ",(0,i.jsx)(n.code,{children:"DevEUI"}),", ",(0,i.jsx)(n.code,{children:"AppEUI"}),", ",(0,i.jsx)(n.code,{children:"AppKey"})," and maybe some other fancy stuff."]}),"\n",(0,i.jsxs)(n.p,{children:["You've added it to your ",(0,i.jsx)(n.a,{href:"https://console.meteoscientific.com/front/",children:"MetSci Console"})," following the ",(0,i.jsx)(n.a,{href:"/docs/tutorial-basics/adding-a-device",children:"Add A Device tutorial"}),", but..."]}),"\n",(0,i.jsx)(n.p,{children:"It's set to fire off a packet every 4 hours.  You want to test it by running it every minute.  How do you configure it?"}),"\n",(0,i.jsxs)(n.p,{children:["Some devices have bluetooth (",(0,i.jsx)(n.code,{children:"BLE"}),") connectivity.  The manufacturer will have a config app you can use, and it'll usually be pretty easy."]}),"\n",(0,i.jsx)(n.p,{children:"Other devices are a little nerdier..."}),"\n",(0,i.jsx)(n.h1,{id:"maximum-nerd",children:"Maximum Nerd"}),"\n",(0,i.jsx)(n.p,{children:"We're going full nerd today."}),"\n",(0,i.jsx)(n.p,{children:"You'll need the following stuff."}),"\n",(0,i.jsx)(n.h3,{id:"hardware",children:"Hardware"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Device: I'm going to use a Dragino LDDS75"}),"\n",(0,i.jsxs)(n.li,{children:["USB-TTL adapter.  I'm going to use a ",(0,i.jsx)(n.a,{href:"https://buspirate.com/get/",children:"Bus Pirate v5"}),".  As I write this (late December 2024) there's a v6 out.  Get it if you want to."]}),"\n",(0,i.jsxs)(n.li,{children:["DuPont Wires.  These are what you use to connect the Bus Pirate and the device.  You can ",(0,i.jsx)(n.a,{href:"https://amzn.to/3BYYfPy",children:"get a set here"})," for under $10."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Bus Pirate and LDDS75 sensor",src:t(3195).A+"",width:"4032",height:"3024"})}),"\n",(0,i.jsx)(n.h3,{id:"software",children:"Software"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Any Terminal emulator.  I'm using ",(0,i.jsx)(n.a,{href:"https://ghostty.org/",children:"Ghostty"})," because it's fun, but you could use Mac's native Terminal or VS Code or anything."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["I'm using a Mac, you can use Windows.  To be honest, Windows is usually easier.  If you're on Windows, try TeraTerm.  If you want to deeply explore your inner nerd, try ",(0,i.jsx)(n.a,{href:"https://github.com/tio/tio",children:"Tio"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"2-connect-to-the-bus-pirate",children:"2. Connect to the Bus Pirate"}),"\n",(0,i.jsxs)(n.p,{children:["Follow the docs over at the ",(0,i.jsx)(n.a,{href:"https://firmware.buspirate.com/tutorial-basics/quick-setup",children:"BusPirate page"})," to connect to the BusPirate, then:"]}),"\n",(0,i.jsx)(n.h3,{id:"3-set-up-uart-on-bus-pirate",children:"3. Set Up UART on Bus Pirate"}),"\n",(0,i.jsxs)(n.p,{children:["Now that you're talking to the Bus Pirate, we're going to set it up to talk to the LDDS75 over ",(0,i.jsx)(n.code,{children:"UART"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["In your connected terminal (where you should be once you finish the Bus Pirate setup above), type ",(0,i.jsx)(n.code,{children:"m"})," for Menu, then answer ",(0,i.jsx)(n.code,{children:"Y"})," to the VT100 color compatible question."]}),"\n",(0,i.jsxs)(n.p,{children:["When you see the ",(0,i.jsx)(n.code,{children:"HiZ>"})," prompt), press ",(0,i.jsx)(n.code,{children:"m"})," again:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"HiZ> m\n\nMode selection\n 1. HiZ\n 2. 1-WIRE\n 3. UART\n 4. HDUART\n 5. I2C\n 6. SPI\n 7. 2WIRE\n 8. 3WIRE\n 9. DIO\n 10. LED\n 11. INFRARED\n x. Exit\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Choose ",(0,i.jsx)(n.code,{children:"3"})," for ",(0,i.jsx)(n.code,{children:"UART"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Now you'll need to enter the correct connection settings for the Dragino.  For each step it'll give you a little hint of what to put.  Use the following as a guide:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:" UART speed: 9600 baud\n Data bits: 8\n Parity: None\n Stop bits: 1\n Hardware flow control: None\n Signal inversion: Non-inverted (Standard)\n"})}),"\n",(0,i.jsx)(n.p,{children:"When you finish and save, you'll end up with this:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"UART>"})}),"\n",(0,i.jsxs)(n.p,{children:["Enter ",(0,i.jsx)(n.code,{children:"W"})," to set up your power supply.  Enter ",(0,i.jsx)(n.code,{children:"3.30"})," for volts, then just hit ",(0,i.jsx)(n.code,{children:"enter"})," for maximum current."]}),"\n",(0,i.jsx)(n.p,{children:"It'll look like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"UART> W\nPower supply\nVolts (0.80V-5.00V)\nx to exit (3.30) > 3.30\nMaximum current (0mA-500mA), <enter> for none\nx to exit (none) >\n3.30V requested, closest value: 3.30V\nCurrent limit:Disabled\n\nPower supply:Enabled\nVreg output: 3.3V, Vref/Vout pin: 3.3V, Current: 1.9mA\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Finally, type in ",(0,i.jsx)(n.code,{children:"bridge"})," to put it into bridge mode."]}),"\n",(0,i.jsxs)(n.p,{children:["Once you're in ",(0,i.jsx)(n.code,{children:"bridge"})," mode you're flying blind; you won't be able to see what you type in, just the response."]}),"\n",(0,i.jsx)(n.h3,{id:"3-physical-connection-from-bus-pirate-to-ldds75",children:"3. Physical Connection from Bus Pirate to LDDS75"}),"\n",(0,i.jsx)(n.p,{children:"Whenever you connect a device over UART (which is what we're doing here), you'll need to make the following physical connnections:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ground to Ground.  Usually labled",(0,i.jsx)(n.code,{children:"GND"}),", and is usually a black wire."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"TX"})," on device to ",(0,i.jsx)(n.code,{children:"RX"})," on Bus Pirate, wire color on example below is yellow."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"RX"})," on device to ",(0,i.jsx)(n.code,{children:"TX"})," on Bus Pirate, wire color on example below is orange."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Here's what it looks like."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"LDDS75 Wiring - UART"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"LDDS75 Device wiring",src:t(2746).A+"",width:"4032",height:"3024"})}),"\n",(0,i.jsx)(n.p,{children:"To get the layout, use the Dragino docs (which we'll talk about in a sec), for now, here's the relevant image:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"LDDS75 device layout",src:t(296).A+"",width:"864",height:"542"})}),"\n",(0,i.jsx)(n.p,{children:"While you're looking at the device, double check all the switches and the jumper are correctly set:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"LDDS75 Set Up",src:t(4766).A+"",width:"4032",height:"3024"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Bus Pirate Wiring - UART"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Bus Pirate wiring",src:t(4477).A+"",width:"4032",height:"3024"})}),"\n",(0,i.jsx)(n.h3,{id:"4-talk-to-the-device",children:"4. Talk to the Device"}),"\n",(0,i.jsxs)(n.p,{children:["Ok, so we're ",(0,i.jsx)(n.code,{children:"bridge"})," mode on the Bus Pirate.  Let's just make sure we have a good connection."]}),"\n",(0,i.jsxs)(n.p,{children:["Type in ",(0,i.jsx)(n.code,{children:"AT+VER=?"})," and hit ",(0,i.jsx)(n.code,{children:"Enter"}),".  You won't see anything when you type, but something like this should show up after you hit ",(0,i.jsx)(n.code,{children:"Enter"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"v1.1.4 US915\n"})}),"\n",(0,i.jsx)(n.p,{children:"If you want to poke the bear, now that you've confirmed you're talking to and hearing back what it says, hit the black reset button on the LDDS75(shown in the image above)."}),"\n",(0,i.jsx)(n.p,{children:"That should get you something like this:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"Hardware version:LSN50 RS-485-UART-I2C V1.3\nLDDS75 LoRaWAN Distance Sensor\nImage Version: v1.1.4\nLoRaWan Stack: DR-LWS-005\nFrequency Band: US915\nDevEui= B7 53 16 EP 32 53 20 G1\n\nPlease use AT+DEBUG to see debug info\n\nJoinRequest NbTrials= 72\n\n***** UpLinkCounter= 0 *****\nTX on freq 903.300 MHz at DR 0\ntxDone\nRX on freq 926.300 MHz at DR 10\nrxTimeOut\nRX on freq 923.300 MHz at DR 8\nrxTimeOut\n\n***** UpLinkCounter= 0 *****\nTX on freq 905.100 MHz at DR 0\ntxDone\nRX on freq 926.900 MHz at DR 10\nrxDone\nRssi= -114\nJOINED\n\nJoin Accept:\nRx1DrOffset:0\nRx2Datarate:8\nReceiveDelay1:1000 ms\nReceiveDelay2:2000 ms\ndistanceSum:3597\n\n***** UpLinkCounter= 0 *****\nTX on freq 904.900 MHz at DR 0\ntxDone\nRX on freq 926.300 MHz at DR 10\n\nReceived: ADR Message\n\nrxDone\nRssi= -55\n\n***** UpLinkCounter= 1 *****\n"})}),"\n",(0,i.jsx)(n.h3,{id:"5-configure-your-device",children:"5. Configure Your Device"}),"\n",(0,i.jsxs)(n.p,{children:["Each device has a set of commands to configure it.  In general, a query for: ",(0,i.jsx)(n.code,{children:"AT commands, YOUR-DEVICE-MAKE-MODEL, documentation"})," on Google will get you started."]}),"\n",(0,i.jsxs)(n.p,{children:["For this tutorial, since we're using the ",(0,i.jsx)(n.code,{children:"Dragino LDDS75"})," we've got two sets of command docs."]}),"\n",(0,i.jsx)(n.p,{children:'We\'ll use the overarching Dragino Commands doc that lists all the "regular commands" for any Dragino device, and then another doc with the commands custom to the device.'}),"\n",(0,i.jsxs)(n.p,{children:["In this case, their ",(0,i.jsx)(n.a,{href:"https://wiki.dragino.com/xwiki/bin/view/Main/End%20Device%20AT%20Commands%20and%20Downlink%20Command/",children:"general AT command documentation is here"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"https://wiki.dragino.com/xwiki/bin/view/Main/User%20Manual%20for%20LoRaWAN%20End%20Nodes/LDDS75%20-%20LoRaWAN%20Distance%20Detection%20Sensor%20User%20Manual/#H3.A0ConfigureLDDS75viaATCommandorLoRaWANDownlink",children:"LDDS75 documentation is here"}),", and I've set the link to go right to the ",(0,i.jsx)(n.code,{children:"Configure LDDS75 via AT Command or LoRaWAN Downlink"})," section."]}),"\n",(0,i.jsxs)(n.p,{children:["You can go wild from here with commands.  The general pattern will be ",(0,i.jsx)(n.code,{children:"AT+<command>=?"}),' will be your "query" command, to figure out what the current setting is, and then ',(0,i.jsx)(n.code,{children:"AT+<command>=<value>"})," will be how you set it."]}),"\n",(0,i.jsx)(n.p,{children:"For example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"AT+TDC=?\n"})}),"\n",(0,i.jsx)(n.p,{children:"Will return how much time in milliseconds we have between transmit intervals (uplinks)."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Query the transmit interval",src:t(6834).A+"",width:"774",height:"150"})}),"\n",(0,i.jsx)(n.p,{children:"43,200,000 milliseconds is equal to 12 hours.  Depending on what you want to do, that might work.  If, however, you want to do some testing, whether it's just to confirm connectivity or muck about with payloads or something else, you might want to drop down that interval to 1 minute (or 5, or whatever.)"}),"\n",(0,i.jsx)(n.p,{children:"So..."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"AT+TDC=43200000 sets a 12 hour interval\nAT+TDC=60000 sets a 1 minute interval\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If you use the ",(0,i.jsx)(n.code,{children:"AT+TDC=60000"})," you'll start seeing data flow through the UART connection, like this:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"***** UpLinkCounter= 0 *****\nTX on freq 904.900 MHz at DR 0\ntxDone\nRX on freq 926.300 MHz at DR 10\n\nReceived: ADR Message\n\nrxDone\nRssi= -55\n"})}),"\n",(0,i.jsxs)(n.p,{children:["And that's it, you're off to the races with configuring a device.  If you want to get the configs for your device, try ",(0,i.jsx)(n.code,{children:"AT+CFG"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"From here, you can use those same documents I linked to above to figure out downlink commands to send over the air, and once your device is deployed in the field you can manage it with those."}),"\n",(0,i.jsx)(n.p,{children:"I would strongly suggest that before you deploy any device, you test it both on the bench and in the backyard."}),"\n",(0,i.jsx)(n.p,{children:"Enjoy the LoRaWAN journey!"}),"\n",(0,i.jsx)(n.h3,{id:"credits",children:"Credits"}),"\n",(0,i.jsx)(n.p,{children:"Enormous thanks to Travis Teague for all the assistance with this; he is and remains a world-class nerd and one of my fave IoT wizards."})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},4477:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/bus-pirate-cc5b1a8cf9dfed2cea86ffb3eef28924.png"},4766:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/ldds75-settings-af4210c4d40164aa028a0291fded40d7.png"},6834:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/example-command-transmit-interval-275f787f5980940165e397722cf04463.png"},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var i=t(6540);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);