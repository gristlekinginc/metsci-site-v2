[
    {
        "id": "ldds75_flow",
        "type": "tab",
        "label": "LDDS75 Flow",
        "disabled": false,
        "info": "Simple flow for processing LDDS75 sensor data"
    },
    {
        "id": "http_in",
        "type": "http in",
        "z": "ldds75_flow",
        "name": "HTTP Input",
        "url": "/data",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 120,
        "wires": [["ldds_parser"]]
    },
    {
        "id": "ldds_parser",
        "type": "function",
        "z": "ldds75_flow",
        "name": "LDDS75 Parser",
        "func": "const data = msg.payload.object.log;\n\nmsg.payload = {\n    time: new Date(msg.payload.time).getTime(),\n    device: msg.payload.deviceInfo.devEui,\n    distance: parseFloat(data.distance.split(' ')[0]),\n    battery: parseFloat(data.batV),\n    temperature: parseFloat(data.tempValue)\n};\n\nreturn msg;",
        "outputs": 1,
        "x": 340,
        "y": 120,
        "wires": [["influxdb"]]
    },
    {
        "id": "influxdb",
        "type": "influxdb out",
        "z": "ldds75_flow",
        "influxdb": "YOUR_INFLUXDB_CONFIG",
        "name": "InfluxDB",
        "measurement": "ldds75",
        "precision": "ms",
        "retentionPolicy": "",
        "database": "YOUR_DATABASE",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "YOUR_ORG",
        "bucket": "YOUR_BUCKET",
        "x": 560,
        "y": 120,
        "wires": []
    }
]
